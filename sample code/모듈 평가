대부분의 클래스가 하나의 역할을 수행하고 있어서 응집도는 높은 편입니다. 
하지만 AlarmService 클래스 같은 경우에는 알람 관리와 울림 두가지를 수행하기 때문에 다른 클래스에 비해서 응집도가 낮다고 할 수 있습니다.
그래서 알람 관리와 울림을 각각 수행할 수 있도록 새로운 클래스를 만들어서 역할을 분리해서 문제점을 개선할 수 있습니다.

User와 AlarmApp의 결합도는 낮은 편이고, AlarmService와 SystemClock 간의 결합도가 높은 편입니다.
그래서 SystemClock을 추상화하여 결합도를 낮출 수 있고, 그로 인해 유연성이 향상됩니다.
